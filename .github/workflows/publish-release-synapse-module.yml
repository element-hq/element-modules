# This pipeline runs for every new tag. It will pull the docker container for
# the commit hash of the tag, and will publish it as `:<tag-name>` and `latest`.
name: Release Synapse Guest Module

on:
    push:
        tags:
            - "module/restricted-guests/v*"

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        timeout-minutes: 15
        permissions:
            contents: read
            packages: write
            id-token: write
        env:
            DOCKER_IMAGE: ghcr.io/element-hq/synapse-guest-module
        steps:
            - name: Generate Docker metadata of the existing image
              id: meta-existing-tag
              uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
              with:
                  images: ${{ env.DOCKER_IMAGE }}
                  tags: |
                      type=sha,prefix=

            - name: Generate Docker metadata of the new image
              id: meta-new-tags
              uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
              with:
                  images: ${{ env.DOCKER_IMAGE }}
                  labels: |
                      org.opencontainers.image.title=Synapse Guest Module
                      org.opencontainers.image.description=A synapse module to restrict the actions of guests
                      org.opencontainers.image.vendor=New Vector Ltd.
                  tags: |
                      type=match,pattern=module/restricted-guests/v(.*),group=1

            - name: Generate Dockerfile
              env:
                  SOURCE_IMAGE: ${{ fromJSON(steps.meta-existing-tag.outputs.json).tags[0] }}
              run: |
                  echo "FROM $SOURCE_IMAGE" > Dockerfile

            - name: Login to ghcr.io
              uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Install Cosign
              uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # @v3.5.0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

            - name: Build and push
              id: build_and_push
              uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
              with:
                  push: true
                  context: .
                  tags: ${{ steps.meta-new-tags.outputs.tags }}
                  labels: ${{ steps.meta-new-tags.outputs.labels }}
                  platforms: linux/amd64,linux/arm64,linux/s390x
                  sbom: true
                  provenance: true

            - name: Sign the images with GitHub OIDC Token
              env:
                  DIGEST: ${{ steps.build_and_push.outputs.digest }}
              run: cosign sign --yes "${DOCKER_IMAGE}@${DIGEST}"
